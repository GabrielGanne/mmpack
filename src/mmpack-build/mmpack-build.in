#!/bin/sh
#
# @mindmaze_header@

PYTHON=${PYTHON:-python3}

cmd=${1:-pkg-create}
mmpack_moduledir=<mmpackbuilddir>
if [ -n "$VIRTUAL_ENV" ] ; then
	mmpack_moduledir="share/mmpack/python"
	mmpack_moduledir="$VIRTUAL_ENV/$mmpack_moduledir"
fi

# Get python entry file by transforming the '-' of command into '_'
pyfile=$mmpack_moduledir/mmpack_`echo $cmd | tr '-' '_'`.py


list_commands() {
	for file in `ls $mmpack_moduledir/mmpack_*.py`; do
		cmd=`basename $file .py | cut -f2- -d'_' | tr '_' '-'`
		printf "$cmd\n"
	done
}

print_usage() {
	cat << ENDOFDOC
This is a stub for all mmpack-build commands

Usage:
mmpack-build <command> [command-options]

Show full mmpack help
mmpack-build --help

List all mmpack commands:
mmpack-build --list-commands

More infos about a specific command:
mmpack-build <command> --help

TODO:
- package creation commands to implement:
  * pkg-check

- package DB commands to implement:
  * provides
  * ...

List of available commands:
ENDOFDOC
	for cmd in $(list_commands) ; do
		printf "\t$cmd\n"
	done
}
case $1 in
	--list-commands) list_commands ; exit 0 ;;
	-h|--help) print_usage ; exit 0 ;;
esac


# check command is provided
if [ -z "$cmd" ]; then
	echo "missing command"
	print_usage
	exit 1
fi

# check target file is readable
if ! [ -r $pyfile ]; then
	echo "command $cmd unknown"
	print_usage
	exit 1
fi

shift 1
exec $PYTHON $pyfile "$@"
