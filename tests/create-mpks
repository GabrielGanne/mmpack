#!/usr/bin/env python3

import sys
import os
import shutil
import random

# for mmpack imports
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/../src")

from binary_package import BinaryPackage

pkgfiles = {
    'pkg-a': ['usr/bin/a-prog',
              'usr/lib/liba',
              'usr/share/doc/pkg-a/changelog'],
    'pkg-b': ['usr/bin/b-prog'],
}


def gen_random_file(filename):
    '''
    Create a file (along with its parent dirs) with a pseudo-random content
    '''
    os.makedirs(os.path.dirname(filename), exist_ok=True)

    sz = random.randint(0, 512)
    buf = bytearray(sz)
    for i in range(sz):
        buf[i] = random.randrange(256)

    output = open(filename, 'wb')
    output.write(buf)


def create_files(builddir):
    instdir = builddir + '/local-install/'
    for pkg, filelist in pkgfiles.items():
        for filename in filelist:
            gen_random_file(instdir + filename)


def gen_mpk_packages(builddir, location):
    vers = '0.1.2'
    srcname = 'test-pkg'
    arch = 'amd64-gnu-linux'

    pkg_a = BinaryPackage('pkg-a', vers, srcname, arch)
    pkg_a._install_files = pkgfiles['pkg-a']
    pkg_b = BinaryPackage('pkg-b', vers, srcname, arch)
    pkg_b._install_files = pkgfiles['pkg-b']
    pkg_b.add_depend('pkg-a', vers)

    pkg_a.create(location, builddir)
    pkg_b.create(location, builddir)


if __name__ == '__main__':
    builddir = sys.argv[1]
    mpkpool = sys.argv[2]
    create_files(builddir)
    gen_mpk_packages(builddir, mpkpool)
